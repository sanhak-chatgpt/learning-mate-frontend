/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LectureDtoResponse
 */
export interface LectureDtoResponse {
    /**
     * 
     * @type {number}
     * @memberof LectureDtoResponse
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof LectureDtoResponse
     */
    majorId: number;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    majorName: string;
    /**
     * 
     * @type {number}
     * @memberof LectureDtoResponse
     */
    subjectId: number;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    subjectName: string;
    /**
     * 
     * @type {number}
     * @memberof LectureDtoResponse
     */
    topicId: number;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    topicName: string;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    transcribed?: string;
    /**
     * 
     * @type {number}
     * @memberof LectureDtoResponse
     */
    score?: number;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    strength?: string;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    weakness?: string;
    /**
     * 
     * @type {string}
     * @memberof LectureDtoResponse
     */
    status: LectureDtoResponseStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof LectureDtoResponse
     */
    helpfulnessRating?: number;
}


/**
 * @export
 */
export const LectureDtoResponseStatusEnum = {
    InProgress: 'IN_PROGRESS',
    Success: 'SUCCESS',
    SttEmpty: 'STT_EMPTY',
    Failure: 'FAILURE'
} as const;
export type LectureDtoResponseStatusEnum = typeof LectureDtoResponseStatusEnum[keyof typeof LectureDtoResponseStatusEnum];


/**
 * Check if a given object implements the LectureDtoResponse interface.
 */
export function instanceOfLectureDtoResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "majorId" in value;
    isInstance = isInstance && "majorName" in value;
    isInstance = isInstance && "subjectId" in value;
    isInstance = isInstance && "subjectName" in value;
    isInstance = isInstance && "topicId" in value;
    isInstance = isInstance && "topicName" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function LectureDtoResponseFromJSON(json: any): LectureDtoResponse {
    return LectureDtoResponseFromJSONTyped(json, false);
}

export function LectureDtoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LectureDtoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'majorId': json['majorId'],
        'majorName': json['majorName'],
        'subjectId': json['subjectId'],
        'subjectName': json['subjectName'],
        'topicId': json['topicId'],
        'topicName': json['topicName'],
        'transcribed': !exists(json, 'transcribed') ? undefined : json['transcribed'],
        'score': !exists(json, 'score') ? undefined : json['score'],
        'strength': !exists(json, 'strength') ? undefined : json['strength'],
        'weakness': !exists(json, 'weakness') ? undefined : json['weakness'],
        'status': json['status'],
        'helpfulnessRating': !exists(json, 'helpfulnessRating') ? undefined : json['helpfulnessRating'],
    };
}

export function LectureDtoResponseToJSON(value?: LectureDtoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'majorId': value.majorId,
        'majorName': value.majorName,
        'subjectId': value.subjectId,
        'subjectName': value.subjectName,
        'topicId': value.topicId,
        'topicName': value.topicName,
        'transcribed': value.transcribed,
        'score': value.score,
        'strength': value.strength,
        'weakness': value.weakness,
        'status': value.status,
        'helpfulnessRating': value.helpfulnessRating,
    };
}

