/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { PageTopicDtoResponse } from '../models';
import { PageTopicDtoResponseFromJSON, PageTopicDtoResponseToJSON } from '../models';

export interface GetTopicsBySubjectIdRequest {
  subjectId: number;
  page?: number;
  size?: number;
}

/**
 *
 */
export class TopicControllerApi extends runtime.BaseAPI {
  /**
   */
  async getTopicsBySubjectIdRaw(
    requestParameters: GetTopicsBySubjectIdRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<PageTopicDtoResponse>> {
    if (requestParameters.subjectId === null || requestParameters.subjectId === undefined) {
      throw new runtime.RequiredError(
        'subjectId',
        'Required parameter requestParameters.subjectId was null or undefined when calling getTopicsBySubjectId.'
      );
    }

    const queryParameters: any = {};

    if (requestParameters.subjectId !== undefined) {
      queryParameters['subjectId'] = requestParameters.subjectId;
    }

    if (requestParameters.page !== undefined) {
      queryParameters['page'] = requestParameters.page;
    }

    if (requestParameters.size !== undefined) {
      queryParameters['size'] = requestParameters.size;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/v1/topic`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      PageTopicDtoResponseFromJSON(jsonValue)
    );
  }

  /**
   */
  async getTopicsBySubjectId(
    requestParameters: GetTopicsBySubjectIdRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<PageTopicDtoResponse> {
    const response = await this.getTopicsBySubjectIdRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
